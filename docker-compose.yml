version: '3.7'

services:

    middleware:
        build:
            context: ./testFlask
            dockerfile: Dockerfile
        container_name: middleware
        image: middleware
        ports:
            - "5000:5000"
        depends_on: 
            - mongodb
        networks:
            - backend

    middleware01:
        build:
            context: ./middleware1
            dockerfile: Dockerfile
        container_name: middleware01
        image: middleware01
        ports:
            - "5001:5001"
        depends_on: 
            - mongodb
        networks:
            - backend


    middleware02:
        build:
            context: ./middleware2
            dockerfile: Dockerfile
        container_name: middleware02
        image: middleware02
        ports:
            - "5002:5002"
        depends_on: 
            - mongodb
        networks:
            - backend


    client:
        build:
            context: ./clientApp/frontend
            dockerfile: Dockerfile
        tty: true
        stdin_open: true
        ports:
            - "3000:3000"
        networks:
            - backend
        depends_on:
            - middleware 
    
    apipoll:
        build: 
            context: ./serverFlask
            dockerfile: Dockerfile
        command: python apiPoll.py
        ports:
            - "20000:20000"
        depends_on:
            - middleware             
        networks:
            - backend    

    mongodb:
        image: mongo
        container_name: mongo
        ports:
            - "27018:27017"
        volumes:
        - mongodbdata:/data/db
        networks:
        - backend

    
                             
networks:
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local